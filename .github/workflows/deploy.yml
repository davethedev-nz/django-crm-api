name: Deploy to Production

on:
  push:
    branches: [ main ]
    paths-ignore:
      - '**.md'
      - 'docs/**'
  workflow_dispatch:  # Allow manual triggering

env:
  PYTHON_VERSION: '3.12'

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install coverage
        
    - name: Run migrations
      run: |
        python manage.py migrate
        
    - name: Run tests with coverage
      run: |
        coverage run --source='.' manage.py test
        coverage report
        coverage xml
        
    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        
    - name: Django system check
      run: |
        python manage.py check --deploy

  # Deploy to Railway
  deploy-railway:
    name: Deploy to Railway
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install Railway CLI
      run: npm install -g @railway/cli
      
    - name: Deploy to Railway
      run: railway up --detach
      env:
        RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
    
    - name: Wait for deployment
      run: sleep 30
    
    - name: Comment on commit
      uses: actions/github-script@v7
      with:
        script: |
          github.rest.repos.createCommitComment({
            owner: context.repo.owner,
            repo: context.repo.repo,
            commit_sha: context.sha,
            body: 'ðŸš€ Deployed to Railway successfully! Check status with `railway status`'
          })

  # Example: Deploy to Heroku
  deploy-heroku:
    name: Deploy to Heroku (Alternative)
    needs: test
    runs-on: ubuntu-latest
    if: false  # Disabled by default, set to true to enable
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Deploy to Heroku
      uses: akhileshns/heroku-deploy@v3.13.15
      with:
        heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
        heroku_app_name: ${{ secrets.HEROKU_APP_NAME }}
        heroku_email: ${{ secrets.HEROKU_EMAIL }}
        
    - name: Run migrations on Heroku
      run: |
        heroku run python manage.py migrate --app ${{ secrets.HEROKU_APP_NAME }}
      env:
        HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}

  # Monitor deployment
  monitor:
    name: Monitor Deployment
    needs: [deploy-railway]
    runs-on: ubuntu-latest
    if: always()
    
    steps:
    - name: Check application health
      run: |
        sleep 30  # Wait for deployment to stabilize
        # Add health check endpoint call here
        # curl -f https://your-app.railway.app/health || exit 1
        
    - name: Notify on failure
      if: failure()
      uses: actions/github-script@v7
      with:
        script: |
          github.rest.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: 'ðŸš¨ Deployment Failed',
            body: 'Automated deployment failed. Please check the logs.',
            labels: ['deployment', 'urgent']
          })

  # Post-deployment tests
  smoke-test:
    name: Smoke Tests
    needs: [deploy-railway]
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Run smoke tests
      run: |
        # Add smoke test commands here
        echo "Running smoke tests..."
        # curl -f https://your-app.railway.app/api/contacts/ || exit 1
